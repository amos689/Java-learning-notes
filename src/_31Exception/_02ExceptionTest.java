package _31Exception;

/*
    1.Java中异常是以类的形式存在, 每一个异常类都可以创建异常对象
    2.异常对应到现实生活是:
        火灾(异常类):
            2008.8.8小明家着火了(异常对象)
            2008.8.9小刚家着火了(异常对象)
            2008.9.8小红家着火了(异常对象)
            ...
        类是模板, 对象是实际存在的个体
    3.编译时异常和运行时异常, 都是发生在运行阶段, 编译阶段是不会发生的
      编译时异常因为其必须在编译(编写)阶段预先处理, 如果不处理会报错而得名的
      但是所有的异常都是在运行阶段发生的, 因为只有在程序运行阶段才可以new对象
    4.编译时异常发生的概率较高(淋雨生病), 运行时异常发生的概率比较低(被车创S)
      对于一些发生概率较高的异常, 需要在运行之前进行预处理, 较低的就没有必要预处理
      如果你把每一个异常都进行预处理, 那么你将活得很累
    5.Java中对语言有两种处理方式
        第一种: 在方法声明位置上, 使用throws关键字
            抛出给上一级, 谁调用我我就抛给谁
        第二种: 使用try...catch语句进行异常的捕捉
            发生了, 但是没人知道, 因为我抓住了
        举个例子: 我是一个公司的职员, 我让公司损失了1000元, 这个损失1000元就是异常
            它有两种处理方式: 上报我的领导[异常的上抛]
                           自掏腰包补上钱[异常的捕捉]
 */
public class _02ExceptionTest {
    public static void main(String[] args) {
        //通过异常类创建异常对象
        NumberFormatException nfe = new NumberFormatException("数字格式化异常! ");
        System.out.println(nfe); //调用了toString方法

        //通过异常类创建异常对象
        NullPointerException npe = new NullPointerException("空指针异常!");
        System.out.println(npe);

    }
}
