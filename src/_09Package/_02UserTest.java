package _09Package;
/*
    对于当前程序来说，User中的age可以随意访问，导致age属性不安全
    一个User对象表示一个用户，用户年龄不可能为负数，以下程序当中年龄值
    可以为负数，并且在程序运行时没有报错，这是当前程序的缺陷

    * 面向对象三大特征：封装，继承，多态
    * 当前主要问题可以通过封装解决
    * 封装的好处
        1.封装之后，对那个事物来说，就看不到比较复杂的一面，只能看到事物简单的那一面
          复杂性封装，只对外提供简单的操作入口，照相机就是一个很好的例子
        2.封装之后才会形成真正的“独立体”
        3.封装之后的程序就意味着以后的程序可以重复使用，并且这个事物的适应性比较强
        4.封装之后，对于事物本身，提高了安全性【安全级别高】
 */
public class _02UserTest {
    public static void main(String[] args) {
        //创建User对象
        _01User user = new _01User();

        //访问age
        //读取年龄【get】
        System.out.println("该用户年龄为：" + user.age);

        //修改年龄【set】
        user.age = 20;
        System.out.println("该用户年龄为：" + user.age);

        //修改年龄
        //这里的age属性显然是完全暴露给外部程序的，对于程序员来说可以操作User中的
        //所有细节，导致User中部分数据不安全
        //不建议这样，建议给User封装，使其更安全，可重用性更高
        user.age = -100;
        System.out.println("该用户年龄为：" + user.age);
    }
}
